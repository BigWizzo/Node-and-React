{"version":3,"sources":["graphql/graphql-queries/graphql-queries.ts","styles/people-styles.ts","components/people-item/people-item.tsx","components/poeple-all/poeple-all.tsx","utils/utils.ts","components/shared/top-buttons.tsx","components/people-bypage/poeple-bypage.tsx","components/people-byname-page/poeple-byname-page.tsx","components/homepage/Homepage.tsx","images/img7.jpg","components/poeple-single/people-single.tsx","components/people-byname/people-byname.tsx","App.tsx","index.tsx"],"names":["GET_ALL_PEOPLE","gql","GET_PEOPLE_BY_PAGE","GET_PEOPLE_BY_NAME","GET_PEOPLE_BY_NAME_PAGE","GET_PERSON_BY_ID","PageHeading","styled","Typography","GridDisplayFlex","Grid","GridDisplayFlexEnd","FlexSpaceBetween","CustomRouterLink","Link","PersonDetails","ColumnContent","CardContent","PersonContent","StyledInput","input","FormBox","Box","PeopleAllItem","person","url","substr","item","xs","sm","lg","to","Card","variant","color","component","name","gender","mass","height","homeworld","AllPeople","history","useHistory","useQuery","error","loading","data","console","log","getAllPeople","Container","maxWidth","sx","margin","Button","startIcon","onClick","push","container","spacing","results","map","ButtonGroup","size","fullWidth","disabled","endIcon","next","x","parseInt","previous","TopButtons","PeopleByPage","location","useLocation","pageId","URLSearchParams","search","get","variables","page","people","getAllPeoplePage","align","length","PeopleByNamePage","personName","getPeopleByNamePage","Homepage","id","SinglePerson","personId","useParams","getPersonById","goBack","CardMedia","alt","image","PeopleByName","useState","searchName","setSearchName","useLazyQuery","getPeopleByName","type","onChange","event","target","value","App","path","exact","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3eba3a2a.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nconst person = `{\r\n      name\r\n      height\r\n      mass\r\n      gender\r\n      url\r\n      homeworld {\r\n        name\r\n      }\r\n    }\r\n`;\r\n\r\nconst people = `{\r\n      previous\r\n      next\r\n      results ${person}\r\n}`;\r\n\r\nexport const GET_ALL_PEOPLE = gql`\r\n  query Query {\r\n    getAllPeople {\r\n      previous\r\n      next\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        url\r\n        homeworld {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PEOPLE_BY_PAGE = gql`\r\n  query GetAllPeoplePage($page: Int!) {\r\n    getAllPeoplePage(page: $page) {\r\n      previous\r\n      next\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        url\r\n        homeworld {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PEOPLE_BY_NAME = gql`\r\n  query GetPeopleByName($name: String!) {\r\n    getPeopleByName(name: $name) {\r\n      previous\r\n      next\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        url\r\n        homeworld {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PEOPLE_BY_NAME_PAGE = gql`\r\n  query GetPeopleByNamePage($name: String!, $page: Int!) {\r\n    getPeopleByNamePage(name: $name, page: $page) {\r\n      previous\r\n      next\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        url\r\n        homeworld {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PERSON_BY_ID = gql`\r\n  query GetPersonById($id: Int!) {\r\n    getPersonById(id: $id) {\r\n      name\r\n      height\r\n      mass\r\n      gender\r\n      url\r\n      homeworld {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardContent, Grid, Typography, Box } from '@mui/material';\r\n\r\nexport const PageHeading = styled(Typography)`\r\n  text-align: center;\r\n  margin: 20px auto;\r\n`;\r\n\r\nexport const GridDisplayFlex = styled(Grid)`\r\n  display: flex;\r\n`;\r\n\r\nexport const GridDisplayFlexEnd = styled(Grid)`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const GridDisplayFlexStart = styled(Grid)`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const FlexSpaceBetween = styled(Grid)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CustomRouterLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const PersonDetails = styled(Grid)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 75vh;\r\n  margin: 30px;\r\n`;\r\n\r\nexport const ColumnContent = styled(CardContent)`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex-direction: column;\r\n}\r\n`;\r\n\r\nexport const PersonContent = styled(Grid)`\r\n  display: flex;\r\n  justify-content: center;\r\n  max-height: 75vh;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const FormBox = styled(Box)`\r\nmax-width: 400px;\r\nmargin: 0 auto 20px;\r\nbackground: #6f64dd33;\r\npadding: 20px;\r\nborder-radius: 5px;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CustomRouterLink } from '../../styles/people-styles';\r\nimport { Grid } from '@mui/material';\r\n\r\ninterface Person {\r\n  name: string;\r\n  gender: string;\r\n  mass: string;\r\n  height: string;\r\n  url: string;\r\n  homeworld: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst PeopleAllItem: React.FC<{ person: Person }> = ({\r\n  person,\r\n}: {\r\n  person: Person;\r\n}) => {\r\n  const url = person.url.substr(22);\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4}>\r\n      <CustomRouterLink to={`/${url}`}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography variant=\"h5\" color=\"#03035f\" component=\"div\">\r\n              {person?.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Gender: {person?.gender}</Typography>\r\n            <Typography variant=\"body2\">mass: {person?.mass}</Typography>\r\n            <Typography variant=\"body2\">height: {person?.height}</Typography>\r\n            <Typography variant=\"body2\">\r\n              HomeWorld: {person?.homeworld?.name}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </CustomRouterLink>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PeopleAllItem;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_PEOPLE } from '../../graphql/graphql-queries/graphql-queries';\r\nimport { Query } from '../../graphql/graphql-interfaces/Query';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container, Grid, Box, ButtonGroup, Button } from '@mui/material';\r\nimport PeopleItem from '../people-item/people-item';\r\nimport { GridDisplayFlexEnd, PageHeading } from '../../styles/people-styles';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\n\r\nconst AllPeople: React.FC = () => {\r\n  const history = useHistory();\r\n  const { error, loading, data } = useQuery<Query>(GET_ALL_PEOPLE);\r\n\r\n  console.log(data?.getAllPeople);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ margin: '30px' }}>\r\n        <GridDisplayFlexEnd>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<PersonSearchIcon />}\r\n            onClick={() => history.push('/search')}\r\n          >\r\n            Search People\r\n          </Button>\r\n        </GridDisplayFlexEnd>\r\n      </Box>\r\n      <PageHeading variant=\"h4\">Home Page</PageHeading>\r\n      {data && (\r\n        <Grid container spacing={2}>\r\n          {data?.getAllPeople.results.map((person) => (\r\n            <PeopleItem person={person} key={person.name} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading && <PageHeading variant=\"h4\">Loading...</PageHeading>}\r\n      {error && <PageHeading variant=\"h6\">Error :(</PageHeading>}\r\n      {data && (\r\n        <Box sx={{ margin: '20px auto' }}>\r\n          <ButtonGroup variant=\"outlined\" size=\"large\" fullWidth>\r\n            <Button disabled startIcon={<ArrowBackIosIcon />}>\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              onClick={() => history.push(`people/?page=2`)}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AllPeople;\r\n","export const next = (x: string): number => {\r\n  return parseInt(x) + 1;\r\n};\r\n\r\nexport const previous = (x: string): number => {\r\n  return parseInt(x) - 1;\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FlexSpaceBetween } from '../../styles/people-styles';\r\nimport { Box, Button } from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\n\r\nconst TopButtons = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Box sx={{ margin: '30px' }}>\r\n      <FlexSpaceBetween>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<HomeIcon />}\r\n          onClick={() => history.push('/people')}\r\n        >\r\n          Go Home\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<PersonSearchIcon />}\r\n          onClick={() => history.push('/search')}\r\n        >\r\n          Search People\r\n        </Button>\r\n      </FlexSpaceBetween>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TopButtons;\r\n","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PEOPLE_BY_PAGE } from '../../graphql/graphql-queries/graphql-queries';\r\nimport {\r\n  GetAllPeoplePage,\r\n  GetAllPeoplePageVariables,\r\n} from '../../graphql/graphql-interfaces/GetAllPeoplePage';\r\nimport { next, previous } from '../../utils/utils';\r\nimport PeopleItem from '../people-item/people-item';\r\nimport { PageHeading } from '../../styles/people-styles';\r\nimport { Box, ButtonGroup, Container, Grid, Button } from '@mui/material';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport TopButtons from '../shared/top-buttons';\r\n\r\nconst PeopleByPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const search = new URLSearchParams(location.search);\r\n  const page = search.get('page');\r\n\r\n  let pageId: string = page as string;\r\n\r\n  if (parseInt(pageId) < 1) {\r\n    history.push('/');\r\n  }\r\n\r\n  const { data, error, loading } = useQuery<\r\n    GetAllPeoplePage,\r\n    GetAllPeoplePageVariables\r\n  >(GET_PEOPLE_BY_PAGE, { variables: { page: parseInt(pageId) } });\r\n\r\n  const people = data?.getAllPeoplePage?.results;\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <TopButtons />\r\n      <PageHeading variant=\"h4\">List by Page</PageHeading>\r\n      {data && (\r\n        <Grid container spacing={2}>\r\n          {people?.map((person) => (\r\n            <PeopleItem person={person} key={person.name} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading && <PageHeading variant=\"h4\">Loading...</PageHeading>}\r\n      {error && <PageHeading variant=\"h6\">Error :(</PageHeading>}\r\n      {error && (\r\n        <Box sx={{ maxWidth: 400, margin: 'auto' }}>\r\n          <PageHeading variant=\"h6\" align=\"center\">\r\n            Person not found. Please use the search button to find the person\r\n            you're looking for\r\n          </PageHeading>\r\n        </Box>\r\n      )}\r\n      {people?.length && (\r\n        <Box sx={{ margin: '20px auto' }}>\r\n          <ButtonGroup variant=\"outlined\" size=\"large\" fullWidth>\r\n            <Button\r\n              startIcon={<ArrowBackIosIcon />}\r\n              onClick={() => history.push(`/people/?page=${previous(pageId)}`)}\r\n            >\r\n              Previous\r\n            </Button>\r\n            {data?.getAllPeoplePage?.next && (\r\n              <Button\r\n                endIcon={<ArrowForwardIosIcon />}\r\n                onClick={() => history.push(`/people/?page=${next(pageId)}`)}\r\n              >\r\n                Next\r\n              </Button>\r\n            )}\r\n          </ButtonGroup>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PeopleByPage;\r\n","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PEOPLE_BY_NAME_PAGE } from '../../graphql/graphql-queries/graphql-queries';\r\nimport {\r\n  GetPeopleByNamePage,\r\n  GetPeopleByNamePageVariables,\r\n} from '../../graphql/graphql-interfaces/GetPeopleByNamePage';\r\nimport { next, previous } from '../../utils/utils';\r\nimport PeopleItem from '../people-item/people-item';\r\nimport { PageHeading } from '../../styles/people-styles';\r\nimport { Box, ButtonGroup, Container, Grid, Button } from '@mui/material';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport TopButtons from '../shared/top-buttons';\r\n\r\nconst PeopleByNamePage: React.FC = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const search = new URLSearchParams(location.search);\r\n  const name = search.get('name');\r\n  const page = search.get('page');\r\n\r\n  let personName: string = name as string;\r\n  let pageId: string = page as string;\r\n\r\n  if (parseInt(pageId) < 2 && name === '') {\r\n    history.push('/');\r\n  }\r\n\r\n  const { data, error, loading } = useQuery<\r\n    GetPeopleByNamePage,\r\n    GetPeopleByNamePageVariables\r\n  >(GET_PEOPLE_BY_NAME_PAGE, {\r\n    variables: { name: personName, page: parseInt(pageId) },\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <TopButtons />\r\n      <PageHeading variant=\"h4\">List by Name</PageHeading>\r\n      {data && (\r\n        <Grid container spacing={2}>\r\n          {data?.getPeopleByNamePage?.results.map((person) => (\r\n            <PeopleItem person={person} key={person.name} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading && <PageHeading variant=\"h4\">Loading...</PageHeading>}\r\n      {error && <PageHeading variant=\"h6\">Error :(</PageHeading>}\r\n      {error && (\r\n        <Box sx={{ maxWidth: 400, margin: 'auto' }}>\r\n          <PageHeading variant=\"h6\" align=\"center\">\r\n            Person not found. Please use the search button to find the person\r\n            you're looking for\r\n          </PageHeading>\r\n        </Box>\r\n      )}\r\n      <Box sx={{ margin: '20px auto' }}>\r\n        <ButtonGroup variant=\"outlined\" size=\"large\" fullWidth>\r\n          {data?.getPeopleByNamePage?.previous && (\r\n            <Button\r\n              startIcon={<ArrowBackIosIcon />}\r\n              onClick={() =>\r\n                history.push(`/people/?name=${name}&page=${previous(pageId)}`)\r\n              }\r\n            >\r\n              Previous\r\n            </Button>\r\n          )}\r\n          {data?.getPeopleByNamePage?.next && (\r\n            <Button\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              onClick={() =>\r\n                history.push(`/people/?name=${name}&page=${next(pageId)}`)\r\n              }\r\n            >\r\n              Next\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PeopleByNamePage;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport AllPeople from '../poeple-all/poeple-all';\r\nimport PeopleByPage from '../people-bypage/poeple-bypage';\r\nimport PeopleByNamePage from '../people-byname-page/poeple-byname-page';\r\n\r\nconst Homepage: React.FC = () => {\r\n  const location = useLocation();\r\n  const search = new URLSearchParams(location.search);\r\n  const name = search.get('name');\r\n  const id = search.get('id');\r\n  const page = search.get('page');\r\n\r\n  return (\r\n    <>\r\n      {!name && !id && !page && <AllPeople />}\r\n      {!name && !id && page && <PeopleByPage />}\r\n      {name && !id && page && <PeopleByNamePage />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/img7.121c62e9.jpg\";","import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PERSON_BY_ID } from '../../graphql/graphql-queries/graphql-queries';\r\nimport { Card, Grid, CardMedia, Typography, Box, Button } from '@mui/material';\r\nimport {\r\n  GridDisplayFlex,\r\n  PersonDetails,\r\n  PersonContent,\r\n  ColumnContent,\r\n  PageHeading,\r\n} from '../../styles/people-styles';\r\nimport image from '../../images/img7.jpg';\r\nimport { FlexSpaceBetween } from '../../styles/people-styles';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\n\r\nconst SinglePerson = () => {\r\n  const history = useHistory();\r\n  const { personId } = useParams() as any;\r\n  const { loading, error, data } = useQuery(GET_PERSON_BY_ID, {\r\n    variables: { id: parseInt(personId) },\r\n  });\r\n\r\n  const person = data?.getPersonById;\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ margin: '30px' }}>\r\n        <FlexSpaceBetween>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<ArrowBackIosIcon />}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            Go Back\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<PersonSearchIcon />}\r\n            onClick={() => history.push('/search')}\r\n          >\r\n            Search People\r\n          </Button>\r\n        </FlexSpaceBetween>\r\n      </Box>\r\n      {data && <PageHeading variant=\"h4\">{person?.name}</PageHeading>}\r\n      <PersonDetails>\r\n        <>\r\n          {loading && <PageHeading variant=\"h4\">Loading...</PageHeading>}\r\n          {data && (\r\n            <Card>\r\n              <GridDisplayFlex container>\r\n                <PersonContent item xs={12} sm={6}>\r\n                  <ColumnContent>\r\n                    <Typography variant=\"h5\" color=\"#03035f\" component=\"div\">\r\n                      {person?.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Gender: {person?.gender}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      mass: {person?.mass}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      height: {person?.height}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      HomeWorld: {person?.homeworld?.name}\r\n                    </Typography>\r\n                  </ColumnContent>\r\n                </PersonContent>\r\n                <Grid item xs={12} sm={6}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"single person\"\r\n                    image={image}\r\n                  />\r\n                </Grid>\r\n              </GridDisplayFlex>\r\n            </Card>\r\n          )}\r\n        </>\r\n      </PersonDetails>\r\n      {error && <PageHeading variant=\"h6\">Error :(</PageHeading>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SinglePerson;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { GET_PEOPLE_BY_NAME } from '../../graphql/graphql-queries/graphql-queries';\r\nimport {\r\n  GetPeopleByName,\r\n  GetPeopleByNameVariables,\r\n} from '../../graphql/graphql-interfaces/GetPeopleByName';\r\nimport PeopleItem from '../people-item/people-item';\r\nimport { PageHeading, StyledInput, FormBox } from '../../styles/people-styles';\r\nimport { Box, ButtonGroup, Container, Grid, Button } from '@mui/material';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport TopButtons from '../shared/top-buttons';\r\n\r\nconst PeopleByName: React.FC = () => {\r\n  const [searchName, setSearchName] = useState<string>('');\r\n\r\n  const history = useHistory();\r\n\r\n  const [getPeopleByName, { data, loading, error }] = useLazyQuery<\r\n    GetPeopleByName,\r\n    GetPeopleByNameVariables\r\n  >(GET_PEOPLE_BY_NAME, {\r\n    variables: { name: searchName },\r\n  });\r\n\r\n  const people = data?.getPeopleByName.results;\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <TopButtons />\r\n      <PageHeading variant=\"h4\">Search People</PageHeading>\r\n      <FormBox>\r\n        <StyledInput\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setSearchName(event.target.value);\r\n          }}\r\n        />\r\n        <Button onClick={() => getPeopleByName()} variant=\"contained\" fullWidth>\r\n          Submit\r\n        </Button>\r\n      </FormBox>\r\n      {data && (\r\n        <Grid container spacing={2}>\r\n          {people?.map((person) => (\r\n            <PeopleItem person={person} key={person.name} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading && <PageHeading variant=\"h4\">Loading...</PageHeading>}\r\n      {error && <PageHeading variant=\"h6\">Error :(</PageHeading>}\r\n      {error && (\r\n        <Box sx={{ maxWidth: 400, margin: 'auto' }}>\r\n          <PageHeading variant=\"h6\" align=\"center\">\r\n            No people found. Please return to the home page or use the search\r\n            button to find the person you're looking for\r\n          </PageHeading>\r\n        </Box>\r\n      )}\r\n      {people?.length && (\r\n        <Box sx={{ margin: '20px auto' }}>\r\n          <ButtonGroup variant=\"outlined\" size=\"large\" fullWidth>\r\n            <Button disabled>Previous</Button>\r\n            {data?.getPeopleByName?.next && (\r\n              <Button\r\n                endIcon={<ArrowForwardIosIcon />}\r\n                onClick={() =>\r\n                  history.push(`/people/?name=${searchName}&page=2`)\r\n                }\r\n              >\r\n                Next\r\n              </Button>\r\n            )}\r\n          </ButtonGroup>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PeopleByName;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Homepage from './components/homepage/Homepage';\nimport SinglePerson from './components/poeple-single/people-single';\nimport SearchPage from './components/people-byname/people-byname';\n\nconst App: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Homepage />\n      </Route>\n      <Route path=\"/people\" exact>\n        <Homepage />\n      </Route>\n      <Route path=\"/search\" exact>\n        <SearchPage />\n      </Route>\n      <Route path=\"/people/:personId\" exact>\n        <SinglePerson />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport './index.css';\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router>\n        <App />\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}